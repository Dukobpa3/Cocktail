{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"clo",
				"clonedData	var"
			],
			[
				"state",
				"stateArray	var"
			],
			[
				"array",
				"stateArray	var"
			],
			[
				"stat",
				"stateArray	var"
			],
			[
				"Aser",
				"Assert"
			],
			[
				"for",
				"forward"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"get",
				"getInstance"
			],
			[
				"mous",
				"mouseX	var"
			],
			[
				"cat",
				"category"
			],
			[
				"pub",
				"publicationName	var"
			],
			[
				"ba",
				"background-size"
			],
			[
				"back",
				"background-image"
			],
			[
				"rib",
				"ribbon-icon"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"Lin",
				"LinkBase"
			],
			[
				"compo",
				"ComponentModel"
			],
			[
				"remove",
				"removeAttribute	function"
			],
			[
				"prop",
				"property"
			],
			[
				"add",
				"addClass"
			],
			[
				"proper",
				"PropertyModel"
			],
			[
				"class",
				"className	var"
			],
			[
				"in",
				"inline-block"
			],
			[
				"maste",
				"masterNode	var"
			],
			[
				"mas",
				"masterName	var"
			],
			[
				"curre",
				"currentMouseY	var"
			],
			[
				"clien",
				"clientX"
			],
			[
				"pu",
				"public"
			],
			[
				"view",
				"viewHtmlDom	var"
			],
			[
				"Boun",
				"boundingBox	var"
			],
			[
				"bod",
				"bodySize	var"
			],
			[
				"elm",
				"elementBox	var"
			],
			[
				"html",
				"htmlDom	var"
			],
			[
				"bo",
				"borderV	var"
			],
			[
				"bord",
				"borderH	var"
			],
			[
				"boe",
				"borderV	var"
			],
			[
				"l",
				"label	Tag"
			],
			[
				"P",
				"PropertyModel"
			],
			[
				"ini",
				"initMediaComp	function"
			],
			[
				"cha",
				"changePending"
			],
			[
				"dra",
				"draggableEvent	var"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"edi",
				"editorInstance"
			],
			[
				"tra",
				"trace"
			],
			[
				"se",
				"setSelectedItem	function"
			],
			[
				"Hml",
				"HtmlDom	js.Dom"
			],
			[
				"getPro",
				"getPropName	function"
			],
			[
				"e",
				"enum	Enum"
			],
			[
				"MIN",
				"MIN_HEIGHT_FOR_DISPLAY_ZONE"
			],
			[
				"di",
				"displayZone	var"
			],
			[
				"displa",
				"displayZone	var"
			],
			[
				"displ",
				"displayZone	var"
			],
			[
				"Html",
				"HtmlDom	js.Dom"
			],
			[
				"dis",
				"displayZoneTemplate	var"
			],
			[
				"con",
				"context	var"
			],
			[
				"rg",
				"rgba()"
			],
			[
				"bac",
				"background-color"
			],
			[
				"elem",
				"elementY	var"
			],
			[
				"eleme",
				"elementX	var"
			],
			[
				"pare",
				"draggedElementParent	var"
			],
			[
				"draggedElement",
				"draggedElementPosition	var"
			],
			[
				"parent",
				"parentNode"
			],
			[
				"root",
				"rootElement	var"
			],
			[
				"model",
				"modelHtmlDom	var"
			],
			[
				"newN",
				"newName	var"
			],
			[
				"Pub",
				"PublicationData"
			],
			[
				"roo",
				"rootElement"
			],
			[
				"Lae",
				"LayerModel"
			],
			[
				"ht",
				"HtmlDom	js.Dom"
			],
			[
				"init",
				"initMediaElements"
			],
			[
				"audio",
				"audioNodes"
			],
			[
				"au",
				"audioNodes"
			],
			[
				"ro",
				"rootElement	var"
			],
			[
				"pos",
				"position"
			],
			[
				"page",
				"pageY"
			],
			[
				"pa",
				"parseInt"
			],
			[
				"sele",
				"selectedItem"
			],
			[
				"Layer",
				"LayerModel"
			],
			[
				"new",
				"newNode"
			],
			[
				"node",
				"nodeName	var"
			],
			[
				"co",
				"component	package"
			],
			[
				"mode",
				"modelHtmlDom"
			],
			[
				"head",
				"headCloseIdx"
			],
			[
				"he",
				"headOpenIdx"
			],
			[
				"vie",
				"viewHtmlDom	var"
			],
			[
				"lin",
				"linkName"
			],
			[
				"Publication",
				"PublicationViewer"
			],
			[
				"CO",
				"ComponentModel	class"
			],
			[
				"Dom",
				"DomTools"
			],
			[
				"tran",
				"transitionData	var"
			],
			[
				"inner",
				"innerHTML	String"
			],
			[
				"Publi",
				"PublicationConfigData"
			],
			[
				"de",
				"debugModeAction"
			],
			[
				"String",
				"StringTools"
			],
			[
				"param",
				"paramName"
			],
			[
				"p",
				"PublicationName"
			],
			[
				"publica",
				"publicationName"
			],
			[
				"a",
				"appendChild( child : js.HtmlDom )	Void"
			],
			[
				"selected",
				"selectedIndex"
			],
			[
				"pages",
				"pagesIds"
			],
			[
				"d",
				"display"
			],
			[
				"Arr",
				"Array"
			],
			[
				"Array",
				"ArrayStore"
			],
			[
				"on",
				"onclick"
			],
			[
				"cre",
				"createElement"
			],
			[
				"L",
				"Layer"
			],
			[
				"s",
				"style"
			],
			[
				"Proper",
				"properties"
			],
			[
				"pro",
				"propArray"
			],
			[
				"getC",
				"getComponents"
			],
			[
				"Ht",
				"HtmlDom"
			],
			[
				"Str",
				"String"
			],
			[
				"ele",
				"elementIdx"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx",
			"settings":
			{
				"buffer_size": 7476,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 207 files for \"href\"\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/css/CSSStyleSheet.hx:\n   46  	 * class constructor\n   47  	 */\n   48: 	public function new(stylesheet:String, origin:PropertyOriginValue, ownerNode:HTMLElement = null, href:String = null, parentStyleSheet:StyleSheet = null, ownerRule:CSSRule = null) \n   49  	{\n   50: 		super(stylesheet, ownerNode, href, parentStyleSheet);\n   51  		cssRules = new CSSRuleList();\n   52  		this.ownerRule = ownerRule;\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/css/StyleSheet.hx:\n   28  	 * if the style sheet was embedded.\n   29  	 */\n   30: 	public var href(default, null):String;\n   31  	\n   32  	/**\n   ..\n   64  	 * @param	stylesheet the whole css style sheet\n   65  	 */\n   66: 	public function new(stylesheet:String, ownerNode:HTMLElement = null, href:String = null, parentStyleSheet:StyleSheet = null) \n   67  	{\n   68  		this.ownerNode = ownerNode;\n   69: 		this.href = href;\n   70  		this.parentStyleSheet = parentStyleSheet;\n   71  	}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx:\n  126  			var tags = Lib.document.getElementsByTagName(\"base\");\n  127  			for (idx in 0...tags){\n  128: 				if (tags[idx].hasAttribute(\"href\")){\n  129: 					base = tags[idx].getAttribute(\"href\");\n  130  					break;\n  131  				}\n  ...\n  133  			if (base == null){\n  134  				// defaults to the document location\n  135: 				base = Lib.document.location.href;\n  136  			}\n  137  		}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLAnchorElement.hx:\n   32  	 * and the destination anchor defined by this attribute.\n   33  	 */\n   34: 	public var href(get_href, set_href):String;\n   35  	\n   36  	/**\n   ..\n  100  	/**\n  101  	 * An anchor is inherently focusable if its\n  102: 	 * href is defined\n  103  	 */\n  104  	override private function isDefaultFocusable():Bool\n  105  	{\n  106: 		if (href != null)\n  107  		{\n  108  			return true;\n  ...\n  124  	private function openDocument():Void\n  125  	{\n  126: 		if (href != null)\n  127  		{\n  128: 			Lib.window.open(href, target);\n  129  		}\n  130  	}\n  ...\n  134  	//////////////////////////////////////////////////////////////////////////////////////////\n  135  	\n  136: 	private function set_href(value:String):String\n  137  	{\n  138: 		setAttribute(HTMLConstants.HTML_HREF_ATTRIBUTE_NAME, value);\n  139  		return value;\n  140  	}\n  141  	\n  142: 	private function get_href():String\n  143  	{\n  144: 		return getAttribute(HTMLConstants.HTML_HREF_ATTRIBUTE_NAME);\n  145  	}\n  146  		\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLConstants.hx:\n  139  	public static inline var HTML_MEDIA_ATTRIBUTE_NAME:String = \"media\";\n  140  	\n  141: 	public static inline var HTML_HREF_ATTRIBUTE_NAME:String = \"href\";\n  142  	\n  143  	public static inline var HTML_TARGET_ATTRIBUTE_NAME:String = \"target\";\n  ...\n  155  	public static inline var HTML_REL_ATTRIBUTE_NAME:String = \"rel\";\n  156  	\n  157: 	public static inline var HTML_HREFLANG_ATTRIBUTE_NAME:String = \"hreflang\";\n  158  	\n  159  	public static inline var HTML_DISABLED_ATTRIBUTE_NAME:String = \"disabled\";\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLDocument.hx:\n  454  		\n  455  		//to match the :link pseudo class, the element must both be an anchor (\"a\") html element and also\n  456: 		//have an \"href\" attribute\n  457: 		if (node.tagName == HTMLConstants.HTML_ANCHOR_TAG_NAME && node.getAttribute(HTMLConstants.HTML_HREF_ATTRIBUTE_NAME) != null)\n  458  		{\n  459  			link = true;\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLLinkElement.hx:\n   40  	\n   41  	/**\n   42: 	 * The destination of the link(s) is given by the href attribute,\n   43  	 * which must be present and must contain a valid non-empty URL\n   44: 	 * potentially surrounded by spaces. If the href attribute\n   45  	 * is absent, then the element does not define a link.\n   46  	 */\n   47: 	public var href(get_href, set_href):String;\n   48  	\n   49  	/**\n   ..\n   69  	\n   70  	/**\n   71: 	 * The hreflang attribute on the link element has the same semantics\n   72: 	 * as the hreflang attribute on a and area elements.\n   73  	 */\n   74: 	public var hreflang(get_hreflang, set_hreflang):String;\n   75  	\n   76  	/**\n   ..\n  166  		//check if if the linke element links to an external CSS\n  167  		//stylesheet and load it if it does\n  168: 		if (type == CSSConstants.CSS_MIME_TYPE && href != null && rel == CSSConstants.STYLESHEET_REL)\n  169  		{\n  170  			_hasLoadedResource = true;\n  171  			\n  172  			var xmlHttpRequest:XMLHTTPRequest = new XMLHTTPRequest();\n  173: 			xmlHttpRequest.open(HTTPConstants.GET, href);\n  174  			xmlHttpRequest.addEventListener(EventConstants.LOAD_END, onCSSLoaded);\n  175  			xmlHttpRequest.send();\n  ...\n  238  	}\n  239  	\n  240: 	private function get_href():String\n  241  	{\n  242: 		return getAttribute(HTMLConstants.HTML_HREF_ATTRIBUTE_NAME);\n  243  	}\n  244  	\n  245: 	private function set_href(value:String):String\n  246  	{\n  247: 		setAttribute(HTMLConstants.HTML_HREF_ATTRIBUTE_NAME, value);\n  248  		return value;\n  249  	}\n  ...\n  277  	}\n  278  	\n  279: 	private function get_hreflang():String\n  280  	{\n  281: 		return getAttribute(HTMLConstants.HTML_HREFLANG_ATTRIBUTE_NAME);\n  282  	}\n  283  	\n  284: 	private function set_hreflang(value:String):String\n  285  	{\n  286: 		setAttribute(HTMLConstants.HTML_HREFLANG_ATTRIBUTE_NAME, value);\n  287  		return value;\n  288  	}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx:\n  124  \n  125  var accessKey : String;\n  126: var href : String;\n  127  var name: String;\n  128  var rel : String;\n  ...\n  134  var charset : String;\n  135  var coords : String;\n  136: var hreflang : String;\n  137  var shape : String;\n  138  var type : String;\n  ...\n  364  var charset : String;\n  365  var disabled : Bool;\n  366: var href : String;\n  367: var hreflang : String;\n  368  var media : String;\n  369  var rel : String;\n  ...\n  379  var host : String;\n  380  var hostname : String;\n  381: var href : String;\n  382  var pathname : String;\n  383  var port : Int;\n  ...\n  616  var type : String;\n  617  var disabled : Bool;\n  618: var href : String;\n  619  var title : String;\n  620  // ??? more ???\n\n52 matches across 8 files\n\n\nSearching 207 files for \"dispatchEvent\"\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/css/CoreStyle.hx:\n  992  		for (i in 0...length)\n  993  		{\n  994: 			htmlElement.dispatchEvent(_pendingTransitionEndEvents[i]);\n  995  		}\n  996  		//reset the array, each event must be dispatched only once\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/Event.hx:\n  123  	 * Initializes attributes of an Event created through the\n  124  	 * DocumentEvent.createEvent method. This method may only \n  125: 	 * be called before the Event has been dispatched via the EventTarget.dispatchEvent()\n  126: 	 * method. If the method is called several times before invoking EventTarget.dispatchEvent,\n  127  	 * only the final invocation takes precedence. This method has no effect if called after\n  128  	 * the event has been dispatched. If called from a subclass of the Event \n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventTarget.hx:\n   48  	/**\n   49  	 * Dispatches an event into the implementation's event model.\n   50: 	 * The event target of the event must be the EventTarget object on which dispatchEvent is called.\n   51  	 * \n   52  	 * @param	evt The event to be dispatched.\n   ..\n   54  	 * If Event.preventDefault() was called the is false\n   55  	 */\n   56: 	public function dispatchEvent(evt:Event):Bool\n   57  	{\n   58  		//the currentTarget because this EventTarget, as \n   ..\n   62  		\n   63  		//this flag allow distinguishing between the EventTarget on \n   64: 		//which the dispatchEvent method was first called and its ancestors,\n   65: 		//whose dispatchEvent method are called after\n   66  		if (evt.dispatched == false)\n   67  		{\n   68: 			//This EventTarget becomes the target of the event as dispatchEvent\n   69  			//was called on it\n   70  			evt.target = this;\n   ..\n   82  \n   83  			//reverse the target ancestors, as during capture phase, \n   84: 			//the first ancestor whose dispatchEvent should be called is\n   85  			//the root of the document\n   86  			targetAncestors.reverse();\n   ..\n   90  			for (i in 0...length)\n   91  			{\n   92: 				targetAncestors[i].dispatchEvent(evt);\n   93  				//if the previous target ancestor stopped propagation, stop\n   94  				//the event flow\n   ..\n  103  			//the target phase begins, as the event target will now dispatch itself\n  104  			evt.eventPhase = Event.AT_TARGET;\n  105: 			dispatchEvent(evt);\n  106  			\n  107  			//return if propagation must be stopped\n  ...\n  126  				for (i in 0...length)\n  127  				{\n  128: 					targetAncestors[i].dispatchEvent(evt);\n  129  					\n  130  					if (shouldStopEventPropagation(evt) == true)\n  ...\n  147  				if (_registeredEventListeners.exists(evt.type) == true)\n  148  				{\n  149: 					doDispatchEvent(_registeredEventListeners.get(evt.type), evt);\n  150  				}\n  151  			}\n  ...\n  255  	 * event type\n  256  	 */\n  257: 	private function doDispatchEvent(eventListeners:Array<EventListener>, evt:Event):Void\n  258  	{\n  259  		var length:Int = eventListeners.length;\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/TransitionEvent.hx:\n   59  	 * of a TransitionEvent created through the DocumentEvent\n   60  	 * interface. This method may only be called before\n   61: 	 * the TransitionEvent has been dispatched via the dispatchEvent\n   62  	 * method, though it may be called multiple times during\n   63  	 * that phase if necessary. If called multiple times,\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/focus/FocusManager.hx:\n  272  			var focusOutEvent:FocusEvent = new FocusEvent();\n  273  			focusOutEvent.initFocusEvent(EventConstants.FOCUS_OUT, true, false, null, 0.0, newActiveElement);\n  274: 			activeElement.dispatchEvent(focusOutEvent);\n  275  			\n  276  			var focusInEvent:FocusEvent = new FocusEvent();\n  277  			focusInEvent.initFocusEvent(EventConstants.FOCUS_IN, true, false, null, 0.0, activeElement);\n  278: 			newActiveElement.dispatchEvent(focusInEvent);\n  279  			\n  280  			//store the new active element before dispatching focus and blur event\n  ...\n  306  			var blurEvent:FocusEvent = new FocusEvent();\n  307  			blurEvent.initFocusEvent(EventConstants.BLUR, false, false, null, 0.0, null);\n  308: 			oldActiveElement.dispatchEvent(blurEvent);\n  309  			\n  310  			var focusEvent:FocusEvent = new FocusEvent();\n  311  			focusEvent.initFocusEvent(EventConstants.FOCUS, false, false, null, 0.0, null);\n  312: 			newActiveElement.dispatchEvent(focusEvent);\n  313  			\n  314  			if (activeElement.onfocus != null)\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx:\n  129  		var clonedData = cloneData(data);\n  130  		// dispatch event on window\n  131: 		Lib.window.dispatchEvent\n  132  		// call callback\n  133  	}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLDocument.hx:\n  545  		\n  546  		var elementRendererAtPoint:ElementRenderer = getFirstElementRendererWhichCanDispatchMouseEvent(mouseEvent.screenX, mouseEvent.screenY);\n  547: 		elementRendererAtPoint.domNode.dispatchEvent(mouseEvent);\n  548  	\n  549  		switch(eventType)\n  ...\n  587  	{\n  588  		var elementRendererAtPoint:ElementRenderer = getFirstElementRendererWhichCanDispatchMouseEvent(wheelEvent.screenX, wheelEvent.screenY);\n  589: 		elementRendererAtPoint.domNode.dispatchEvent(wheelEvent);\n  590  		\n  591  		if (wheelEvent.defaultPrevented == false)\n  ...\n  635  			mouseEvent.clientY, mouseEvent.ctrlKey, mouseEvent.altKey, mouseEvent.shiftKey, mouseEvent.metaKey, mouseEvent.button, elementRendererAtPoint.domNode);\n  636  			\n  637: 			_hoveredElementRenderer.domNode.dispatchEvent(mouseOutEvent);\n  638  			\n  639  			var oldHoveredElementRenderer:ElementRenderer = _hoveredElementRenderer;\n  ...\n  646  			mouseEvent.clientY, mouseEvent.ctrlKey, mouseEvent.shiftKey,  mouseEvent.altKey, mouseEvent.metaKey, mouseEvent.button, oldHoveredElementRenderer.domNode);\n  647  			\n  648: 			elementRendererAtPoint.domNode.dispatchEvent(mouseOverEvent);\n  649  			\n  650  			//refresh the style of the newly hovered html element as a :hover\n  ...\n  662  		}\n  663  		\n  664: 		elementRendererAtPoint.domNode.dispatchEvent(mouseEvent);\n  665  	}\n  666  	\n  ...\n  673  	public function onPlatformKeyDownEvent(keyboardEvent:KeyboardEvent):Void\n  674  	{\n  675: 		activeElement.dispatchEvent(keyboardEvent);\n  676  \n  677  		//TODO 4 : should this logic go into HTMLElement ? or is it application/embedder level ? \n  ...\n  701  	public function onPlatformKeyUpEvent(keyboardEvent:KeyboardEvent):Void\n  702  	{\n  703: 		activeElement.dispatchEvent(keyboardEvent);\n  704  	}\n  705  	\n  ...\n  722  		\n  723  		//dispatch the TouchEvent on the node onto which it was triggered\n  724: 		elementAtTouchPoint.domNode.dispatchEvent(touchEvent);\n  725  		\n  726  		//if a start or move touch event default behaviour is canceled\n  ...\n  774  		mouseEvent.metaKey, mouseEvent.button, null);\n  775  		\n  776: 		htmlElement.dispatchEvent(clickEvent);\n  777  		\n  778  		//execute post or canceled activation behaviour\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLElement.hx:\n 1230  		mouseEvent.initMouseEvent(EventConstants.CLICK, false, false, null, 0, 0, 0, 0, 0, false, false, false, false,\n 1231  		0, null); \n 1232: 		dispatchEvent(mouseEvent);\n 1233  	}\n 1234  	\n ....\n 1245  		var event:Event = new Event();\n 1246  		event.initEvent(eventType, bubbles, cancelable);\n 1247: 		dispatchEvent(event);\n 1248  	}\n 1249  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLImageElement.hx:\n  192  		var loadEvent:UIEvent = new UIEvent();\n  193  		loadEvent.initUIEvent(EventConstants.LOAD, false, false, null, 0.0);\n  194: 		dispatchEvent(loadEvent);\n  195  	}\n  196  	\n  ...\n  199  		var errorEvent:UIEvent = new UIEvent();\n  200  		errorEvent.initUIEvent(EventConstants.ERROR, false, false, null, 0.0);\n  201: 		dispatchEvent(errorEvent);\n  202  	}\n  203  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLObjectElement.hx:\n  320  		var loadEvent:UIEvent = new UIEvent();\n  321  		loadEvent.initUIEvent(EventConstants.LOAD, false, false, null, 0.0);\n  322: 		dispatchEvent(loadEvent);\n  323  	}\n  324  	\n  ...\n  334  		var errorEvent:UIEvent = new UIEvent();\n  335  		errorEvent.initUIEvent(EventConstants.ERROR, false, false, null, 0.0);\n  336: 		dispatchEvent(errorEvent);\n  337  	}\n  338  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/ScrollBar.hx:\n  480  		var scrollEvent:UIEvent = new UIEvent();\n  481  		scrollEvent.initUIEvent(EventConstants.SCROLL, false, false, null, 0.0);\n  482: 		dispatchEvent(scrollEvent);\n  483  	}\n  484  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/http/XMLHTTPRequest.hx:\n  326  			var loadStart:ProgressEvent = new ProgressEvent();\n  327  			loadStart.initEvent(EventConstants.LOAD_START, false, false);\n  328: 			dispatchEvent(loadStart);\n  329  			\n  330  			if (_uploadComplete == false)\n  ...\n  332  				var uploadLoadStart:ProgressEvent = new ProgressEvent();\n  333  				uploadLoadStart.initEvent(EventConstants.LOAD_START, false, false);\n  334: 				upload.dispatchEvent(uploadLoadStart);\n  335  			}\n  336  		}\n  ...\n  483  				var loadEvent:ProgressEvent = new ProgressEvent();\n  484  				loadEvent.initEvent(EventConstants.LOAD, false, false);\n  485: 				dispatchEvent(loadEvent);\n  486  				\n  487  				var loadEndEvent:ProgressEvent = new ProgressEvent();\n  488  				loadEndEvent.initEvent(EventConstants.LOAD_END, false, false);\n  489: 				dispatchEvent(loadEndEvent);\n  490  \n  491  				//return to prevent scheduling a call to this\n  ...\n  509  		var progressEvent:ProgressEvent = new ProgressEvent();\n  510  		progressEvent.initProgressEvent(EventConstants.PROGRESS, false, false, _nativeHttp.total != 0, _nativeHttp.loaded, _nativeHttp.total);\n  511: 		dispatchEvent(progressEvent);\n  512  	}\n  513  	\n  ...\n  554  			errorEvent.initEvent(event, false, false);\n  555  			\n  556: 			upload.dispatchEvent(errorEvent);\n  557  			\n  558  			var loadEnd:ProgressEvent = new ProgressEvent();\n  559  			loadEnd.initEvent(EventConstants.LOAD_END, false, false);\n  560  			\n  561: 			upload.dispatchEvent(loadEnd);\n  562  		}\n  563  		\n  ...\n  565  		errorEvent.initEvent(event, false, false);\n  566  		\n  567: 		dispatchEvent(errorEvent);\n  568  		\n  569  		var loadEnd:ProgressEvent = new ProgressEvent();\n  570  		loadEnd.initEvent(EventConstants.LOAD_END, false, false);\n  571  		\n  572: 		dispatchEvent(loadEnd);\n  573  	}\n  574  	\n  ...\n  591  		var readyStateChangeEvent:Event = new Event();\n  592  		readyStateChangeEvent.initEvent(EventConstants.READY_STATE_CHANGE, false, false);\n  593: 		dispatchEvent(readyStateChangeEvent);\n  594  	}\n  595  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/invalidation/InvalidationManager.hx:\n  390  			var resizeEvent:UIEvent = new UIEvent();\n  391  			resizeEvent.initUIEvent(EventConstants.RESIZE, false, false, null, 0);\n  392: 			_htmlDocument.window.dispatchEvent(resizeEvent);\n  393  		}\n  394  	}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/renderer/ScrollableRenderer.hx:\n  677  		var scrollEvent:UIEvent = new UIEvent();\n  678  		scrollEvent.initUIEvent(EventConstants.SCROLL, mustBubbleScrollEvent(), false, null, 0.0);\n  679: 		domNode.dispatchEvent(scrollEvent);\n  680  	}\n  681  	\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/resource/AbstractResource.hx:\n   90  		var loadEvent:UIEvent = new UIEvent();\n   91  		loadEvent.initUIEvent(EventConstants.LOAD, false, false, null, 0.0);\n   92: 		dispatchEvent(loadEvent);\n   93  	}\n   94  	\n   ..\n  104  		var errorEvent:UIEvent = new UIEvent();\n  105  		errorEvent.initUIEvent(EventConstants.ERROR, false, false, null, 0.0);\n  106: 		dispatchEvent(errorEvent);\n  107  	}\n  108  }\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/port/platform/nativeHttp/AbstractNativeHttp.hx:\n  151  			var errorEvent:Event = new Event();\n  152  			errorEvent.initEvent(EventConstants.ERROR, false, false);\n  153: 			dispatchEvent(errorEvent);\n  154  		}\n  155  		//here load was successful\n  ...\n  158  			var loadEvent:Event = new Event();\n  159  			loadEvent.initEvent(EventConstants.LOAD, false, false);\n  160: 			dispatchEvent(loadEvent);\n  161  		}\n  162  		//here load still in progress, dispatched progress event\n  ...\n  166  			var progressEvent:ProgressEvent = new ProgressEvent();\n  167  			progressEvent.initProgressEvent(EventConstants.PROGRESS, false, false, false, loaded, total);\n  168: 			dispatchEvent(progressEvent);\n  169  			\n  170  			Lib.document.timer.delay(onLoadProgress, PROGRESS_UPDATE_FREQUENCY);\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx:\n  103  function addEventListener( event : String, listener: Event -> Void, useCapture : Bool ) : Void;\n  104  function removeEventListener( type : String, listener: Event -> Void, useCapture : Bool ) : Void;\n  105: function dispatchEvent( event : CustomEvent ) : Void;\n  106  \n  107  function requestFullScreen() : Void;\n\n54 matches across 17 files\n\n\nSearching 207 files for \"FocusEvent\"\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/DOMConstants.hx:\n   49  	public static inline var MOUSE_EVENT_INTERFACE:String = \"MouseEvent\";\n   50  	\n   51: 	public static inline var FOCUS_EVENT_INTERFACE:String = \"FocusEvent\";\n   52  	\n   53  	public static inline var KEYBOARD_EVENT_INTERFACE:String = \"KeyboardEvent\";\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/Document.hx:\n   11  import cocktail.core.event.CustomEvent;\n   12  import cocktail.core.event.Event;\n   13: import cocktail.core.event.FocusEvent;\n   14  import cocktail.core.event.KeyboardEvent;\n   15  import cocktail.core.event.MouseEvent;\n   ..\n  151  				\n  152  			case DOMConstants.FOCUS_EVENT_INTERFACE:\n  153: 				return new FocusEvent();\n  154  				\n  155  			case DOMConstants.WHEEL_EVENT_INTERFACE:\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventCallback.hx:\n   92  	 * the focus\n   93  	 */\n   94: 	public var onfocus(default, set_onFocus):FocusEvent->Void;\n   95  	\n   96  	/**\n   97  	 * callback called when the HTMLElement loses the focus\n   98  	 */\n   99: 	public var onblur(default, set_onBlur):FocusEvent->Void;\n  100  	\n  101  	//////////////////////////////////////////////////////////////////////////////////////////\n  ...\n  368  	////////////////////////////\n  369  	\n  370: 	private function set_onFocus(value:FocusEvent->Void):FocusEvent->Void\n  371  	{\n  372  		updateCallbackListener(EventConstants.FOCUS, cast(value), cast(onfocus));\n  ...\n  374  	}\n  375  	\n  376: 	private function set_onBlur(value:FocusEvent->Void):FocusEvent->Void\n  377  	{\n  378  		updateCallbackListener(EventConstants.BLUR, cast(value), cast(onblur));\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/FocusEvent.hx:\n   10  \n   11  /**\n   12:  * The FocusEvent interface provides specific contextual information \n   13   * associated with Focus events. To create an instance of the \n   14:  * FocusEvent interface, use the DocumentEvent.createEvent(\"FocusEvent\")\n   15   * method call.\n   16   * \n   17   * @author Yannick DOMINGUEZ\n   18   */\n   19: class FocusEvent extends UIEvent\n   20  {\n   21  	/**\n   ..\n   37  	\n   38  	/**\n   39: 	 * Initializes attributes of a FocusEvent object. \n   40  	 * This method has the same behavior as UIEvent.initUIEvent(). \n   41  	 * \n   ..\n   45  	 * @param	detailArg Refer to the UIEvent.initUIEvent() method for a description of this parameter.\n   46  	 * @param	viewArg Refer to the UIEvent.initUIEvent() method for a description of this parameter.\n   47: 	 * @param	relatedTargetArg Specifies FocusEvent.relatedTarget. This value may be null.\n   48  	 */\n   49: 	public function initFocusEvent(eventTypeArg:String, canBubbleArg:Bool, cancelableArg:Bool, viewArg:Dynamic, detailArg:Float,relatedTargetArg:EventTarget):Void\n   50  	{\n   51  		//can't alter event after it has been dispatched\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/focus/FocusManager.hx:\n   13  import cocktail.core.event.Event;\n   14  import cocktail.core.event.EventConstants;\n   15: import cocktail.core.event.FocusEvent;\n   16  import cocktail.core.html.HTMLBodyElement;\n   17  import cocktail.core.html.HTMLElement;\n   ..\n  265  		if (newActiveElement != activeElement)\n  266  		{\n  267: 			//else dispatch a serie of FocusEvent on the element losing\n  268  			//focus and on the one gaining it\n  269  			\n  270  			//dispatch pre-focus shift focus event which bubbles in the document\n  271  			\n  272: 			var focusOutEvent:FocusEvent = new FocusEvent();\n  273: 			focusOutEvent.initFocusEvent(EventConstants.FOCUS_OUT, true, false, null, 0.0, newActiveElement);\n  274  			activeElement.dispatchEvent(focusOutEvent);\n  275  			\n  276: 			var focusInEvent:FocusEvent = new FocusEvent();\n  277: 			focusInEvent.initFocusEvent(EventConstants.FOCUS_IN, true, false, null, 0.0, activeElement);\n  278  			newActiveElement.dispatchEvent(focusInEvent);\n  279  			\n  ...\n  304  			//dispatch post-focus event which don't bubbles through the document\n  305  			\n  306: 			var blurEvent:FocusEvent = new FocusEvent();\n  307: 			blurEvent.initFocusEvent(EventConstants.BLUR, false, false, null, 0.0, null);\n  308  			oldActiveElement.dispatchEvent(blurEvent);\n  309  			\n  310: 			var focusEvent:FocusEvent = new FocusEvent();\n  311: 			focusEvent.initFocusEvent(EventConstants.FOCUS, false, false, null, 0.0, null);\n  312: 			newActiveElement.dispatchEvent(focusEvent);\n  313  			\n  314  			if (activeElement.onfocus != null)\n  315  			{\n  316: 				var focusEvent:FocusEvent = new FocusEvent();\n  317: 				focusEvent.initFocusEvent(EventConstants.FOCUS, true, false, null, 0.0, null);\n  318  				\n  319: 				activeElement.onfocus(focusEvent);\n  320  			}\n  321  		}\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLDocument.hx:\n   46  import cocktail.core.event.EventData;\n   47  import cocktail.core.renderer.RendererData;\n   48: import cocktail.core.event.FocusEvent;\n   49  import cocktail.core.timer.Timer;\n   50  import cocktail.core.window.Window;\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLElement.hx:\n   21  import cocktail.core.event.EventConstants;\n   22  import cocktail.core.event.EventTarget;\n   23: import cocktail.core.event.FocusEvent;\n   24  import cocktail.core.event.UIEvent;\n   25  import cocktail.core.event.WheelEvent;\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/renderer/TextInputRenderer.hx:\n   11  import cocktail.core.event.Event;\n   12  import cocktail.core.event.EventConstants;\n   13: import cocktail.core.event.FocusEvent;\n   14  import cocktail.core.event.KeyboardEvent;\n   15  import cocktail.core.html.HTMLElement;\n\n42 matches across 8 files\n\n\nSearching 208 files for \"FOCUS_EVENT_INTERFACE\"\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/DOMConstants.hx:\n   49  	public static inline var MOUSE_EVENT_INTERFACE:String = \"MouseEvent\";\n   50  	\n   51: 	public static inline var FOCUS_EVENT_INTERFACE:String = \"FocusEvent\";\n   52  	\n   53  	public static inline var KEYBOARD_EVENT_INTERFACE:String = \"KeyboardEvent\";\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/Document.hx:\n  151  				return new KeyboardEvent();\n  152  				\n  153: 			case DOMConstants.FOCUS_EVENT_INTERFACE:\n  154  				return new FocusEvent();\n  155  				\n\n2 matches across 2 files\n\n\nSearching 208 files for \"onblur\"\n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventCallback.hx:\n   97  	 * callback called when the HTMLElement loses the focus\n   98  	 */\n   99: 	public var onblur(default, set_onBlur):FocusEvent->Void;\n  100  	\n  101  	//////////////////////////////////////////////////////////////////////////////////////////\n  ...\n  374  	}\n  375  	\n  376: 	private function set_onBlur(value:FocusEvent->Void):FocusEvent->Void\n  377  	{\n  378: 		updateCallbackListener(EventConstants.BLUR, cast(value), cast(onblur));\n  379: 		return onblur = value;\n  380  	}\n  381  \n\n/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx:\n   87  \n   88  var onscroll : Event -> Void;\n   89: var onblur : Event -> Void;\n   90  var onclick : Event -> Void;\n   91  var ondblclick : Event -> Void;\n\n6 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 27128,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventCallback.hx",
			"settings":
			{
				"buffer_size": 16474,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/DOMConstants.hx",
			"settings":
			{
				"buffer_size": 1988,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/PopStateEvent.hx",
			"settings":
			{
				"buffer_size": 1218,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/Document.hx",
			"settings":
			{
				"buffer_size": 9363,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLConstants.hx",
			"settings":
			{
				"buffer_size": 6404,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/HistoryData.hx",
			"settings":
			{
				"buffer_size": 946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.hxml",
			"settings":
			{
				"buffer_size": 116,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx",
			"settings":
			{
				"buffer_size": 16896,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/historyApi/HistoryTests.hx",
			"settings":
			{
				"buffer_size": 4964,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventConstants.hx",
			"settings":
			{
				"buffer_size": 17693,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/HaXe/Hxml.sublime-build",
	"command_palette":
	{
		"height": 348.0,
		"selected_items":
		[
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLDocument.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/DOMConstants.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/EditorBase.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Silex/src/silex/property/PropertyModel.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/ToolBoxController.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/MenuController.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/history/HistoryTests.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/HistoryData.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/timer/Timer.hx",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/bin/history/historyTest.html",
		"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/build/history/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/geom/MatrixTests.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/history/HistoryTests",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/config.js",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/interaction/Draggable.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/ThemesList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/readme.txt",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationService.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/util/FileSystemTools.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/build/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/admin/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/layer/LayerModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/DropHandlerBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/util/DomTools.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/InsertDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/component/ComponentModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/property/PropertyModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-builder.html",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/Page.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/page/PageModel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/Layer.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/LayersList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PropertyEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/Silex.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/Panel.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/admin/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/PublicationViewer.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/LayoutBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PageListSelector.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/basic-theme/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/basic-theme/app.css",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/core/Builder.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PageList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/FileBrowserDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/EditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/TextEditorDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/TextStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/src/PublicationsTestClient.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BoxTypeEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BackgroundStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/old-PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/MenuController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/AuthDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/publication/PublicationConfig.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PositionStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/core/Application.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/list/List.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/old-MasterDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/list/XmlList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/libs/silex/silex.js",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/kcfinder/js/browser/init.js",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/ckeditor.html",
		"/Users/lexa/Dropbox/fdt-workspace/IMApp/src/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkToPage.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/TouchLink.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/samples/assets/outputxhtml/outputxhtml.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/ckeditor/contents.css",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/HtmlEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/CenterBox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderColorEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderRadiusEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BorderWidthEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BoxStyleEditor.hx",
		"/usr/lib/haxe/std/haxe/macro/Context.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-player.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/third-party-tools/kcfinder/browse.php",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/interpreter/Interpreter.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/MasterDropHandler.hx",
		"/usr/lib/haxe/std/haxe/xml/Parser.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/test 0xxx/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ModelBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/StageDropHandler.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/SelectionMarker.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/layout/Accordion.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/DialogBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/stage/MenuController.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/IBrixComponent.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/navigation/link/LinkClosePage.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Brix/src/brix/component/ui/DisplayObject.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/OpenDialog.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/index-server.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/tests.sublime-project",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build-publications-tests.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/test/build/build-automatic-tests.hxml",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BlockStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BoxStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/ClipStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PositionStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/BlockStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/ClipStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/bin/publications/default 2/index.html",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BackgroundStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/BoxTypeEditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/EditorBase.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/MarginStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PaddingStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PlacementStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/PropertyEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/RawHtmlEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/controller/property-editor/TextStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/dialog/ModelDebugger.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/list/PublicationList.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/PageToolbox.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/MarginStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PaddingStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/PlacementStyleEditor.hx",
		"/Users/lexa/Dropbox/fdt-workspace/Silex/src/silex/ui/toolbox/editor/RawHtmlEditor.hx"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/",
			"-*.js,-*.php,-*.js.map,-*.sublime-workspace",
			"-*.js,-*.php,-*.js.map",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TRANSITION_END",
			"set_onTransitionEnd",
			"set_onPlay",
			"onblur",
			"FOCUS_EVENT_INTERFACE",
			"stateArray",
			".state",
			"base",
			"FocusEvent",
			"dispatchEvent",
			"cloneData",
			"clonedData",
			"stateArray",
			"state",
			"{",
			"idxPubFolder",
			"pubUrl",
			"HTMLConstants",
			"\"href\"",
			"href",
			";",
			"; ",
			"window",
			"HistoryEvent",
			"Send the user agent ",
			"public function _",
			"public",
			"Null<",
			"Null",
			"PopStateEvent",
			"Event",
			"Event->",
			"html\");",
			");//",
			"Assert.equals",
			"20000",
			"2000",
			"		var async = Assert.createAsync(function(){\n",
			"		// Check the current state\n",
			"	}\n	public function",
			"	}\n	public function _testHistoryForward():Void\n	{\n",
			"function test",
			"\");",
			"	{\n",
			"trace(\"history.length = \"+history.length);\n",
			"html\");",
			", \"",
			"\"- \"+history.state",
			"		history.",
			"history.",
			"+history",
			" history",
			"history",
			"3",
			"stateObj, \"page",
			"//			url",
			"page1.html",
			"			url",
			"?",
			"geom",
			"selectable",
			"head",
			"10000",
			"important",
			"cke_1_contents",
			"position: absolute;",
			"			position: absolute;\n			height: 100% !important;\n",
			"width",
			"AssociatedComponent",
			"bbElement",
			"theme-list",
			"layer-list",
			"::",
			"MasterToolbox",
			"configData.state",
			"configData.",
			"doDuplicate",
			"duplicate",
			"create",
			"publicationData",
			",",
			":",
			",",
			"\n				",
			"				",
			"PUBLICATION_FOLDER",
			"PublicationConstants.PUBLICATION_FOLDER + publicationName + \"/\"",
			"recursiveCopy",
			"to do this author",
			"getPublicationData",
			"create",
			"createpu",
			"create",
			"addRequiredMasters",
			"master-phantom",
			"inset",
			"insert-icon",
			"insert-",
			"icons/",
			".ribbon-list insert-icon-",
			".solid",
			"solid",
			"class=\"solid",
			"icons/temporary-icon",
			"temporary-icon",
			"/.png",
			"icons/",
			".ribbon-icon.",
			"\n",
			".ribbon-icon.",
			"\" ",
			"temp-icon",
			"url",
			".silex-toolbox .context-layer",
			".silex-toolbox fieldset legend",
			">>>>>>>",
			".silex-toolbox .properties-link .radio-button",
			".silex-toolbox .properties-link div",
			"=======",
			"url",
			"<img",
			"img",
			"break",
			"initialPageName",
			"box-shadow",
			"page-",
			"openen",
			"property-editor-delete-selected"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"<DIV",
			"</DIV",
			"brixInstanceId",
			"BrixId",
			"Brix components",
			"brix",
			"publicationName",
			"components"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/History.hx",
					"settings":
					{
						"buffer_size": 7476,
						"regions":
						{
						},
						"selection":
						[
							[
								4587,
								4587
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1936.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 27128,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										274,
										278
									],
									[
										405,
										409
									],
									[
										675,
										679
									],
									[
										874,
										878
									],
									[
										992,
										996
									],
									[
										999,
										1003
									],
									[
										1297,
										1301
									],
									[
										1349,
										1353
									],
									[
										1512,
										1516
									],
									[
										1739,
										1743
									],
									[
										1748,
										1752
									],
									[
										1758,
										1762
									],
									[
										1874,
										1878
									],
									[
										1985,
										1989
									],
									[
										2107,
										2111
									],
									[
										2158,
										2162
									],
									[
										2337,
										2341
									],
									[
										2414,
										2418
									],
									[
										2514,
										2518
									],
									[
										2586,
										2590
									],
									[
										2850,
										2854
									],
									[
										2880,
										2884
									],
									[
										3101,
										3105
									],
									[
										3135,
										3139
									],
									[
										3472,
										3476
									],
									[
										3592,
										3596
									],
									[
										3835,
										3839
									],
									[
										3975,
										3979
									],
									[
										4084,
										4088
									],
									[
										4093,
										4097
									],
									[
										4103,
										4107
									],
									[
										4180,
										4184
									],
									[
										4260,
										4264
									],
									[
										4334,
										4338
									],
									[
										4347,
										4351
									],
									[
										4361,
										4365
									],
									[
										4568,
										4572
									],
									[
										4796,
										4800
									],
									[
										4971,
										4975
									],
									[
										5043,
										5047
									],
									[
										5113,
										5117
									],
									[
										5190,
										5194
									],
									[
										5306,
										5310
									],
									[
										5382,
										5386
									],
									[
										5456,
										5460
									],
									[
										5537,
										5541
									],
									[
										5725,
										5729
									],
									[
										5864,
										5868
									],
									[
										6010,
										6014
									],
									[
										6036,
										6040
									],
									[
										6180,
										6184
									],
									[
										6319,
										6323
									],
									[
										6610,
										6623
									],
									[
										7038,
										7051
									],
									[
										7139,
										7152
									],
									[
										7593,
										7606
									],
									[
										7783,
										7796
									],
									[
										7989,
										8002
									],
									[
										8063,
										8076
									],
									[
										8214,
										8227
									],
									[
										8405,
										8418
									],
									[
										8593,
										8606
									],
									[
										8854,
										8867
									],
									[
										9018,
										9031
									],
									[
										9208,
										9221
									],
									[
										9361,
										9374
									],
									[
										9773,
										9786
									],
									[
										10203,
										10216
									],
									[
										10432,
										10445
									],
									[
										10729,
										10742
									],
									[
										10939,
										10952
									],
									[
										11217,
										11230
									],
									[
										11559,
										11572
									],
									[
										11823,
										11836
									],
									[
										12132,
										12145
									],
									[
										12480,
										12493
									],
									[
										12665,
										12678
									],
									[
										12831,
										12844
									],
									[
										13086,
										13099
									],
									[
										13263,
										13276
									],
									[
										13464,
										13477
									],
									[
										13803,
										13816
									],
									[
										13962,
										13975
									],
									[
										14239,
										14252
									],
									[
										14428,
										14441
									],
									[
										14711,
										14724
									],
									[
										14900,
										14913
									],
									[
										15181,
										15194
									],
									[
										15470,
										15483
									],
									[
										15718,
										15731
									],
									[
										15919,
										15932
									],
									[
										16107,
										16120
									],
									[
										16424,
										16437
									],
									[
										16560,
										16573
									],
									[
										16753,
										16766
									],
									[
										16875,
										16888
									],
									[
										17056,
										17069
									],
									[
										17261,
										17274
									],
									[
										17593,
										17606
									],
									[
										17916,
										17929
									],
									[
										18203,
										18216
									],
									[
										18392,
										18405
									],
									[
										18680,
										18693
									],
									[
										18881,
										18894
									],
									[
										19169,
										19182
									],
									[
										19585,
										19598
									],
									[
										19997,
										20007
									],
									[
										20317,
										20327
									],
									[
										20515,
										20525
									],
									[
										20773,
										20783
									],
									[
										20935,
										20945
									],
									[
										21156,
										21166
									],
									[
										21174,
										21184
									],
									[
										21351,
										21361
									],
									[
										21369,
										21379
									],
									[
										21606,
										21616
									],
									[
										21749,
										21759
									],
									[
										21806,
										21816
									],
									[
										21913,
										21923
									],
									[
										22027,
										22037
									],
									[
										22394,
										22404
									],
									[
										22484,
										22494
									],
									[
										22914,
										22924
									],
									[
										23124,
										23134
									],
									[
										23330,
										23340
									],
									[
										23347,
										23357
									],
									[
										23389,
										23399
									],
									[
										23561,
										23571
									],
									[
										23578,
										23588
									],
									[
										23619,
										23629
									],
									[
										23882,
										23892
									],
									[
										23899,
										23909
									],
									[
										23937,
										23947
									],
									[
										24079,
										24089
									],
									[
										24090,
										24100
									],
									[
										24107,
										24117
									],
									[
										24131,
										24141
									],
									[
										24146,
										24156
									],
									[
										24252,
										24262
									],
									[
										24348,
										24358
									],
									[
										24359,
										24369
									],
									[
										24376,
										24386
									],
									[
										24401,
										24411
									],
									[
										24416,
										24426
									],
									[
										24525,
										24535
									],
									[
										24788,
										24798
									],
									[
										25111,
										25121
									],
									[
										25443,
										25453
									],
									[
										25843,
										25864
									],
									[
										26152,
										26173
									],
									[
										26478,
										26484
									],
									[
										26498,
										26504
									],
									[
										26686,
										26692
									],
									[
										26815,
										26821
									],
									[
										26841,
										26847
									],
									[
										27003,
										27009
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								26327,
								26327
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 5,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 11628.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventCallback.hx",
					"settings":
					{
						"buffer_size": 16474,
						"regions":
						{
						},
						"selection":
						[
							[
								16407,
								16407
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8962.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/DOMConstants.hx",
					"settings":
					{
						"buffer_size": 1988,
						"regions":
						{
						},
						"selection":
						[
							[
								876,
								876
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/PopStateEvent.hx",
					"settings":
					{
						"buffer_size": 1218,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/dom/Document.hx",
					"settings":
					{
						"buffer_size": 9363,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								152
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/html/HTMLConstants.hx",
					"settings":
					{
						"buffer_size": 6404,
						"regions":
						{
						},
						"selection":
						[
							[
								743,
								743
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/history/HistoryData.hx",
					"settings":
					{
						"buffer_size": 946,
						"regions":
						{
						},
						"selection":
						[
							[
								881,
								881
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 39.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "build.hxml",
					"settings":
					{
						"buffer_size": 116,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HaXe/Hxml.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/js/Dom.hx",
					"settings":
					{
						"buffer_size": 16896,
						"regions":
						{
						},
						"selection":
						[
							[
								8222,
								8222
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5069.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/test/unit_tests/src/historyApi/HistoryTests.hx",
					"settings":
					{
						"buffer_size": 4964,
						"regions":
						{
						},
						"selection":
						[
							[
								596,
								596
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/lexa/Documents/www/Dropbox/fdt-workspace/Cocktail/src/cocktail/core/event/EventConstants.hx",
					"settings":
					{
						"buffer_size": 17693,
						"regions":
						{
						},
						"selection":
						[
							[
								17668,
								17668
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/HaXe/HaXe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7376.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 213.0
	},
	"output.haxe":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true
}
